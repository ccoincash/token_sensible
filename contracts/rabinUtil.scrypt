import "tokenProto.scrypt";
import "util.scrypt";
import "txUtil.scrypt";

library RabinUtil {
  // rabin sig length
  static int RABIN_SIG_LEN = 128;
  static int PADDING_SIZE_LEN = 2;
  static int MSG_SIZE_LEN = 4;

  // rabin msg common format:
  // <txid(32 bytes)> + <outputIndex(4 bytes)> + <outputSatoshi(8 bytes)> + <lockingScript>

  // common part
  static int TX_ID_LEN = 32;
  static int OUTPUT_INDEX_LEN = 4;
  static int OUTPUT_SATOSHI_LEN = 8;

  static int TX_ID_OFFSET = 0;
  static int OUTPUT_INDEX_OFFSET = RabinUtil.TX_ID_OFFSET + RabinUtil.TX_ID_LEN;
  static int OUTPUT_SATOSHI_OFFSET = RabinUtil.OUTPUT_INDEX_OFFSET + RabinUtil.OUTPUT_INDEX_LEN;
  static int LOCKING_SCRIPT_OFFSET = RabinUtil.OUTPUT_SATOSHI_OFFSET + RabinUtil.OUTPUT_SATOSHI_LEN;

  static function rabinHash(bytes x): int {
    // expand into 512 bit hash
    bytes hx = sha256(x);
    int idx = len(hx) / 2;
    return unpack(sha256(hx[:idx]) + sha256(hx[idx:]) + b'00');
  }

  static function getMsgTxId(bytes msg): bytes {
    return msg[RabinUtil.TX_ID_OFFSET: RabinUtil.TX_ID_OFFSET + RabinUtil.TX_ID_LEN];
  }

  static function getMsgOutputIndex(bytes msg): int {
    return unpack(msg[RabinUtil.OUTPUT_INDEX_OFFSET: RabinUtil.OUTPUT_INDEX_OFFSET + RabinUtil.OUTPUT_INDEX_LEN]);
  }

  static function getMsgOutputSatoshis(bytes msg): int {
    return unpack(msg[RabinUtil.OUTPUT_SATOSHI_OFFSET: RabinUtil.OUTPUT_SATOSHI_OFFSET + RabinUtil.OUTPUT_SATOSHI_LEN] + b'00');
  }

  static function getMsgLockingScript(bytes msg): bytes {
    return msg[RabinUtil.LOCKING_SCRIPT_OFFSET: ];
  }

  static function checkOutputPoint(bytes prevouts, int inputIndex, bytes rabinMsg): bool {
    bytes prevTxId = prevouts[inputIndex * TxUtil.OUTPOINT_LEN: inputIndex * TxUtil.OUTPOINT_LEN + TxUtil.TX_ID_LEN];
    int outputIndex = Util.fromLEUnsigned(prevouts[inputIndex * TxUtil.OUTPOINT_LEN + TxUtil.TX_ID_LEN: (inputIndex + 1) * TxUtil.OUTPOINT_LEN]);
    require(prevTxId == RabinUtil.getMsgTxId(rabinMsg));
    require(outputIndex == RabinUtil.getMsgOutputIndex(rabinMsg));
    return true;
  }
}